{
  "contractName": "Broadcaster",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tip",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Broadcaster.sol\":\"Broadcaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Broadcaster.sol\":{\"keccak256\":\"0x87153a5ce41d3153460cb89256c9ab1d8171195d5f7c4858763e709acb659cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bde49201de3b7d4be93c75d6bb106a0626832b8d43729bc722513404e09dbf4\",\"dweb:/ipfs/QmbqVpL32jTWDAjVHqSmVPtKV1ZTcnFZVWQko7SBVNqSrU\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061037c806100606000396000f3fe6080604052600436106100345760003560e01c80632755cd2d146100395780638da5cb5b14610043578063b69ef8a81461006e575b600080fd5b610041610099565b005b34801561004f57600080fd5b5061005861018a565b60405161006591906101f5565b60405180910390f35b34801561007a57600080fd5b506100836101ae565b6040516100909190610229565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011f906102a1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561016e573d6000803e3d6000fd5b50346001600082825461018191906102f0565b92505081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101df826101b4565b9050919050565b6101ef816101d4565b82525050565b600060208201905061020a60008301846101e6565b92915050565b6000819050919050565b61022381610210565b82525050565b600060208201905061023e600083018461021a565b92915050565b600082825260208201905092915050565b7f4f776e65722063616e6e6f7420746970207468656d73656c7665730000000000600082015250565b600061028b601b83610244565b915061029682610255565b602082019050919050565b600060208201905081810360008301526102ba8161027e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102fb82610210565b915061030683610210565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561033b5761033a6102c1565b5b82820190509291505056fea264697066735822122006d86eb2c934f3611003a04f37f61cd5b154e1424130976ee6c15727c51cac4d64736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80632755cd2d146100395780638da5cb5b14610043578063b69ef8a81461006e575b600080fd5b610041610099565b005b34801561004f57600080fd5b5061005861018a565b60405161006591906101f5565b60405180910390f35b34801561007a57600080fd5b506100836101ae565b6040516100909190610229565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011f906102a1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561016e573d6000803e3d6000fd5b50346001600082825461018191906102f0565b92505081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101df826101b4565b9050919050565b6101ef816101d4565b82525050565b600060208201905061020a60008301846101e6565b92915050565b6000819050919050565b61022381610210565b82525050565b600060208201905061023e600083018461021a565b92915050565b600082825260208201905092915050565b7f4f776e65722063616e6e6f7420746970207468656d73656c7665730000000000600082015250565b600061028b601b83610244565b915061029682610255565b602082019050919050565b600060208201905081810360008301526102ba8161027e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102fb82610210565b915061030683610210565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561033b5761033a6102c1565b5b82820190509291505056fea264697066735822122006d86eb2c934f3611003a04f37f61cd5b154e1424130976ee6c15727c51cac4d64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2741:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:6",
                "type": ""
              }
            ],
            "src": "7:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:6",
                "type": ""
              }
            ],
            "src": "139:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:6"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:6",
                "type": ""
              }
            ],
            "src": "249:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:6",
                "type": ""
              }
            ],
            "src": "397:254:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "702:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "712:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "723:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "712:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "694:7:6",
                "type": ""
              }
            ],
            "src": "657:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "822:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "845:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "827:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "793:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "800:3:6",
                "type": ""
              }
            ],
            "src": "740:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "962:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "972:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "972:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1008:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1008:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "957:4:6",
                "type": ""
              }
            ],
            "src": "864:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1188:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1205:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1210:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1198:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1226:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1245:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1250:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1241:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1226:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1160:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1165:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1176:11:6",
                "type": ""
              }
            ],
            "src": "1092:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1373:71:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1403:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1391:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:14:6"
                      },
                      {
                        "hexValue": "4f776e65722063616e6e6f7420746970207468656d73656c766573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1407:29:6",
                        "type": "",
                        "value": "Owner cannot tip themselves"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1384:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1384:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1384:53:6"
                }
              ]
            },
            "name": "store_literal_in_memory_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1365:6:6",
                "type": ""
              }
            ],
            "src": "1267:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1596:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1606:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1672:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1677:2:6",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1613:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1606:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1778:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
                      "nodeType": "YulIdentifier",
                      "src": "1689:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1689:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1791:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1802:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1798:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1798:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1791:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1584:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1592:3:6",
                "type": ""
              }
            ],
            "src": "1450:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2003:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2015:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2026:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2011:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2003:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2069:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2075:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2065:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2065:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2039:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2095:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2229:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2103:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2103:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2095:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1973:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1988:4:6",
                "type": ""
              }
            ],
            "src": "1822:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2275:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2292:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2295:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2285:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2285:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2392:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2382:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2382:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2416:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2406:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2406:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2247:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2477:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2487:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2510:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2492:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2492:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2487:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2544:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2526:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2521:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2684:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2686:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2686:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2686:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2605:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2612:66:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2680:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2608:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2608:74:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2602:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2602:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2599:107:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2716:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2727:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2730:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2723:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2716:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2464:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2467:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2473:3:6",
                "type": ""
              }
            ],
            "src": "2433:305:6"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner cannot tip themselves\")\n\n    }\n\n    function abi_encode_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "235:559:2:-:0;;;416:51;;;;;;;;;;453:10;436:5;;:28;;;;;;;;;;;;;;;;;;235:559;;;;;;",
  "deployedSourceMap": "235:559:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:282;;;:::i;:::-;;331:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;509:282;616:5;;;;;;;;;;602:19;;:10;:19;;;;594:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;697:10;688:29;;:40;718:9;688:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:9;768:7;;:20;;;;;;;:::i;:::-;;;;;;;;509:282::o;331:28::-;;;;;;;;;;;;:::o;393:19::-;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:77::-;694:7;723:5;712:16;;657:77;;;:::o;740:118::-;827:24;845:5;827:24;:::i;:::-;822:3;815:37;740:118;;:::o;864:222::-;957:4;995:2;984:9;980:18;972:26;;1008:71;1076:1;1065:9;1061:17;1052:6;1008:71;:::i;:::-;864:222;;;;:::o;1092:169::-;1176:11;1210:6;1205:3;1198:19;1250:4;1245:3;1241:14;1226:29;;1092:169;;;;:::o;1267:177::-;1407:29;1403:1;1395:6;1391:14;1384:53;1267:177;:::o;1450:366::-;1592:3;1613:67;1677:2;1672:3;1613:67;:::i;:::-;1606:74;;1689:93;1778:3;1689:93;:::i;:::-;1807:2;1802:3;1798:12;1791:19;;1450:366;;;:::o;1822:419::-;1988:4;2026:2;2015:9;2011:18;2003:26;;2075:9;2069:4;2065:20;2061:1;2050:9;2046:17;2039:47;2103:131;2229:4;2103:131;:::i;:::-;2095:139;;1822:419;;;:::o;2247:180::-;2295:77;2292:1;2285:88;2392:4;2389:1;2382:15;2416:4;2413:1;2406:15;2433:305;2473:3;2492:20;2510:1;2492:20;:::i;:::-;2487:25;;2526:20;2544:1;2526:20;:::i;:::-;2521:25;;2680:1;2612:66;2608:74;2605:1;2602:81;2599:107;;;2686:18;;:::i;:::-;2599:107;2730:1;2727;2723:9;2716:16;;2433:305;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/** \n  Contract:\n    *Use Chainlink to display current price of currencies interface\n    *\n**/\n\ninterface PriceFeed {\n  function getLatestPrice() external view returns(uint);\n}\n\ncontract Broadcaster {\n  // Assign deployer the owner of the contract and can receive payment\n  address payable public owner;\n  // Balance of this contract\n  uint public balance;\n\n\nconstructor() {\n    owner = payable (msg.sender);\n}\n\n// Function for tipping the broadcaster\nfunction tip() public payable {\n  // Checking that person tipping is not the owner\n  require(msg.sender != owner, \"Owner cannot tip themselves\");\n  // Send tip  to the contract\n  payable (msg.sender).transfer(msg.value);\n  // Updates balnce of the contract\n  balance += msg.value;\n}\n\n}\n",
  "sourcePath": "/Users/shih-yuhwang/Portfolio/Broadcaster/contracts/Broadcaster.sol",
  "ast": {
    "absolutePath": "project:/contracts/Broadcaster.sol",
    "exportedSymbols": {
      "Broadcaster": [
        139
      ],
      "PriceFeed": [
        95
      ]
    },
    "id": 140,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 88,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PriceFeed",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 89,
          "nodeType": "StructuredDocumentation",
          "src": "57:94:2",
          "text": "Contract:\nUse Chainlink to display current price of currencies interface*"
        },
        "fullyImplemented": false,
        "id": 95,
        "linearizedBaseContracts": [
          95
        ],
        "name": "PriceFeed",
        "nameLocation": "163:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8e15f473",
            "id": 94,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "186:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:2:2"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "225:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "224:6:2"
            },
            "scope": 95,
            "src": "177:54:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 140,
        "src": "153:80:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Broadcaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139
        ],
        "name": "Broadcaster",
        "nameLocation": "244:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 97,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "354:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "331:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 96,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "331:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b69ef8a8",
            "id": 99,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "405:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "393:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "393:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "430:37:2",
              "statements": [
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "436:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "453:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "453:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "444:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:9:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "444:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "436:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "436:28:2"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:2"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:2"
            },
            "scope": 139,
            "src": "416:51:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "539:252:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "602:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "602:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 117,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "616:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "602:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65722063616e6e6f7420746970207468656d73656c766573",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "623:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
                          "typeString": "literal_string \"Owner cannot tip themselves\""
                        },
                        "value": "Owner cannot tip themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
                          "typeString": "literal_string \"Owner cannot tip themselves\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "594:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "594:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "718:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "718:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "697:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "697:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "688:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "688:9:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "688:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "688:40:2"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "768:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "779:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "779:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "768:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "768:20:2"
                }
              ]
            },
            "functionSelector": "2755cd2d",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tip",
            "nameLocation": "518:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:2"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:2"
            },
            "scope": 139,
            "src": "509:282:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "235:559:2",
        "usedErrors": []
      }
    ],
    "src": "32:763:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Broadcaster.sol",
    "exportedSymbols": {
      "Broadcaster": [
        139
      ],
      "PriceFeed": [
        95
      ]
    },
    "id": 140,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 88,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PriceFeed",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 89,
          "nodeType": "StructuredDocumentation",
          "src": "57:94:2",
          "text": "Contract:\nUse Chainlink to display current price of currencies interface*"
        },
        "fullyImplemented": false,
        "id": 95,
        "linearizedBaseContracts": [
          95
        ],
        "name": "PriceFeed",
        "nameLocation": "163:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8e15f473",
            "id": 94,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "186:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:2:2"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "225:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "224:6:2"
            },
            "scope": 95,
            "src": "177:54:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 140,
        "src": "153:80:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Broadcaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139
        ],
        "name": "Broadcaster",
        "nameLocation": "244:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 97,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "354:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "331:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 96,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "331:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b69ef8a8",
            "id": 99,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "405:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "393:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "393:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "430:37:2",
              "statements": [
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "436:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "453:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "453:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "444:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:9:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "444:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "436:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "436:28:2"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:2"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:2"
            },
            "scope": 139,
            "src": "416:51:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "539:252:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "602:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "602:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 117,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "616:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "602:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65722063616e6e6f7420746970207468656d73656c766573",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "623:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
                          "typeString": "literal_string \"Owner cannot tip themselves\""
                        },
                        "value": "Owner cannot tip themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b273091402564bf32ef8089ff1f12324e0da586f9d8c4f361e8feed12a898cc2",
                          "typeString": "literal_string \"Owner cannot tip themselves\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "594:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "594:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "718:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "718:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "697:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "697:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "688:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "688:9:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "688:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "688:40:2"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "768:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "779:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "779:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "768:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "768:20:2"
                }
              ]
            },
            "functionSelector": "2755cd2d",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tip",
            "nameLocation": "518:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:2"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:2"
            },
            "scope": 139,
            "src": "509:282:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "235:559:2",
        "usedErrors": []
      }
    ],
    "src": "32:763:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x42C5B8291442437a40732E63cDE72bC6323C42C0",
      "transactionHash": "0x9bccd5541f3f17c07fa117a792d0e0454d70d0a796c7168c9d31dfdfe0ca527a"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-18T22:39:29.407Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}