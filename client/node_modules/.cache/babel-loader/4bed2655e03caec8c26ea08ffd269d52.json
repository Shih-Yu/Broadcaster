{"ast":null,"code":"var _jsxFileName = \"/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\"; // Contract Addressses\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n  // Check webpage if a wallet exists\n  async function checkWallet() {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n  } // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n\n\n  async function connect() {\n    await checkWallet();\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js"],"names":["logo","ethers","EthPriceFeed","BTCPriceFeed","EURPriceFeed","broadcasterAddress","EthPriceFeedAddress","BTCPriceFeedAddress","EURPriceFeedAddress","App","checkWallet","window","ethereum","request","method","connect","provider","providers","Web3Provider","etherum","signer"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;;AACA,MAAMC,kBAAkB,GAAG,4CAA3B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;;AAEA,SAASC,GAAT,GAAe;AAEZ;AACA,iBAAeC,WAAf,GAA6B;AAC5B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACA,GALW,CAOb;AACA;;;AACA,iBAAeC,OAAf,GAAyB;AACvB,UAAML,WAAW,EAAjB;AACA,UAAMM,QAAQ,GAAG,IAAIf,MAAM,CAACgB,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACQ,OAAzC,CAAjB;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACI,MAAT,EAAf;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEpB,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAhCQS,G;AAkCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\";\n\n// Contract Addressses\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n\n   // Check webpage if a wallet exists\n   async function checkWallet() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n   }\n  \n  // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n  async function connect() {\n    await checkWallet();\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}