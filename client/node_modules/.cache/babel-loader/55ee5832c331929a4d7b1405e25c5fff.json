{"ast":null,"code":"var _jsxFileName = \"/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { useState } from \"react\";\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\"; // Contract Addressses\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n  _s();\n\n  // setting state for price updates\n  const [ethPrice, setEthPrice] = useState();\n  const [BTCPrice, setBTCPrice] = useState();\n  const [EURPrice, setEURPrice] = useState(); // Check webpage if a wallet exists\n  //  async function checkWallet() {\n  //   await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  //  }\n  // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n\n  async function connect() {\n    // await checkWallet();\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  } // Get price from Chainlink PriceFeed\n\n\n  async function getEth() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Using Ethers.js to call the contract on Rinkeby Testnet\n\n    const contract = new ethers.Contract(EthPriceFeedAddress, EthPriceFeed.abi, provider);\n\n    try {\n      const data = await contract.getLatestPrice(); //  Convert price to readable number\n\n      let price = ethers.utils.formatEther(data) * 10e9; //  set State to price from pricefeed\n\n      setEthPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getEth(),\n        children: [\"Eth/USD:$ \", ethPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connect(),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y4ETQeU1RVY02JoInUqcqodiMW0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js"],"names":["logo","useState","ethers","EthPriceFeed","BTCPriceFeed","EURPriceFeed","broadcasterAddress","EthPriceFeedAddress","BTCPriceFeedAddress","EURPriceFeedAddress","App","ethPrice","setEthPrice","BTCPrice","setBTCPrice","EURPrice","setEURPrice","connect","provider","providers","Web3Provider","window","etherum","signer","getEth","ethereum","contract","Contract","abi","data","getLatestPrice","price","utils","formatEther","toFixed","error","console"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;;AACA,MAAMC,kBAAkB,GAAG,4CAA3B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;AACA,MAAMC,mBAAmB,GAAG,4CAA5B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC,CAJa,CAMZ;AACD;AACA;AACA;AAEA;AACA;;AACA,iBAAegB,OAAf,GAAyB;AACvB;AACA,UAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,OAAzC,CAAjB;AACA,UAAMC,MAAM,GAAGL,QAAQ,CAACK,MAAT,EAAf;AACD,GAjBY,CAmBZ;;;AACA,iBAAeC,MAAf,GAAwB;AACvB,UAAMN,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACI,QAAzC,CAAjB,CADuB,CAEvB;;AACA,UAAMC,QAAQ,GAAG,IAAIxB,MAAM,CAACyB,QAAX,CAAoBpB,mBAApB,EAAyCJ,YAAY,CAACyB,GAAtD,EAA2DV,QAA3D,CAAjB;;AACA,QAAI;AACF,YAAMW,IAAI,GAAG,MAAMH,QAAQ,CAACI,cAAT,EAAnB,CADE,CAEF;;AACA,UAAIC,KAAK,GAAG7B,MAAM,CAAC8B,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,IAAiC,IAA7C,CAHE,CAIF;;AACAjB,MAAAA,WAAW,CAACmB,KAAK,CAACG,OAAN,CAAc,CAAd,CAAD,CAAX;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEnC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAGwB,MAAM,EAAxB;AAAA,iCAAyCb,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAGM,OAAO,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3CQP,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport { useState } from \"react\";\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\";\n\n// Contract Addressses\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n  // setting state for price updates\n  const [ethPrice, setEthPrice] = useState();\n  const [BTCPrice, setBTCPrice] = useState();\n  const [EURPrice, setEURPrice] = useState();\n\n   // Check webpage if a wallet exists\n  //  async function checkWallet() {\n  //   await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  //  }\n  \n  // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n  async function connect() {\n    // await checkWallet();\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  }\n\n   // Get price from Chainlink PriceFeed\n   async function getEth() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // Using Ethers.js to call the contract on Rinkeby Testnet\n    const contract = new ethers.Contract(EthPriceFeedAddress, EthPriceFeed.abi, provider);\n    try {\n      const data = await contract.getLatestPrice();\n      //  Convert price to readable number\n      let price = ethers.utils.formatEther(data) * 10e9;\n      //  set State to price from pricefeed\n      setEthPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <button onClick={ getEth() }>Eth/USD:$ { ethPrice}</button>\n        <button onClick={ connect() }>Connect Wallet</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}