{"ast":null,"code":"var _jsxFileName = \"/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport broadcaster from \"../src/build/Broadcaster.json\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\"; // Contract Addressses\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n  _s();\n\n  // setting state for price updates\n  const [ethPrice, setEthPrice] = useState();\n  const [BTCPrice, setBTCPrice] = useState();\n  const [EURPrice, setEURPrice] = useState(); // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n\n  async function connect() {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  } // Get Eth price from Chainlink PriceFeed\n\n\n  async function getEth() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Using Ethers.js to call the contract on Rinkeby Testnet\n\n    const contract = new ethers.Contract(EthPriceFeedAddress, EthPriceFeed.abi, provider);\n\n    try {\n      const data = await contract.getLatestPrice(); //  Convert price to readable number\n\n      let price = ethers.utils.formatEther(data) * 10e9; //  set State to price from pricefeed\n\n      setEthPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  } // Get BTC price from Chainlink PriceFeed\n\n\n  async function getBTC() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Using Ethers.js to call the contract on Rinkeby Testnet\n\n    const contract = new ethers.Contract(BTCPriceFeedAddress, BTCPriceFeed.abi, provider);\n\n    try {\n      const data = await contract.getLatestPrice(); //  Convert price to readable number\n\n      let price = ethers.utils.formatEther(data) * 10e9; //  set State to price from pricefeed\n\n      setBTCPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  } // Get BTC price from Chainlink PriceFeed\n\n\n  async function getEUR() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Using Ethers.js to call the contract on Rinkeby Testnet\n\n    const contract = new ethers.Contract(EURPriceFeedAddress, EURPriceFeed.abi, provider);\n\n    try {\n      const data = await contract.getLatestPrice(); //  Convert price to readable number\n\n      let price = ethers.utils.formatEther(data) * 10e9; //  set State to price from pricefeed\n\n      setEURPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  } // Function to tip broadcaster\n\n\n  async function tip() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let contract = new ethers.Contract(broadcasterAddress, broadcaster.abi, signer);\n    let transaction = await contract.tip();\n    await transaction.wait();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App App-header\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Broadcaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect\",\n        onClick: connect,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getEth(),\n          children: [\"Eth/USD:$ \", ethPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getBTC(),\n          children: [\"BTC/USD:$ \", BTCPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getEUR(),\n          children: [\"EUR/USD:$ \", EURPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://cdn.jwplayer.com/players/yPdwJR8o-qHcvMMW9.html\",\n        width: \"640\",\n        height: \"360\",\n        frameborder: \"0\",\n        scrolling: \"auto\",\n        title: \"WebDemo\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tip\",\n        onClick: tip,\n        children: \"Tip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y4ETQeU1RVY02JoInUqcqodiMW0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shih-yuhwang/Portfolio/Broadcaster/client/src/App.js"],"names":["useState","ethers","broadcaster","EthPriceFeed","BTCPriceFeed","EURPriceFeed","broadcasterAddress","EthPriceFeedAddress","BTCPriceFeedAddress","EURPriceFeedAddress","App","ethPrice","setEthPrice","BTCPrice","setBTCPrice","EURPrice","setEURPrice","connect","window","ethereum","request","method","provider","providers","Web3Provider","etherum","signer","getEth","contract","Contract","abi","data","getLatestPrice","price","utils","formatEther","toFixed","error","console","getBTC","getEUR","tip","getSigner","transaction","wait"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport broadcaster from \"../src/build/Broadcaster.json\";\nimport EthPriceFeed from \"../src/build/EthPriceFeed.json\";\nimport BTCPriceFeed from \"../src/build/BTCPriceFeed.json\";\nimport EURPriceFeed from \"../src/build/EURPriceFeed.json\";\n\n// Contract Addressses\nconst broadcasterAddress = \"0x42C5B8291442437a40732E63cDE72bC6323C42C0\";\nconst EthPriceFeedAddress = \"0x5B9E873d24479Ae61f19a0B1D4d3C2C1c7dd3c22\";\nconst BTCPriceFeedAddress = \"0xE9db6B4f63E7c074296a461964737d3A7081F6b1\";\nconst EURPriceFeedAddress = \"0x51656bD0400d00F2C5D561a2FF35E3Ad3bD992FD\";\n\nfunction App() {\n  // setting state for price updates\n  const [ethPrice, setEthPrice] = useState();\n  const [BTCPrice, setBTCPrice] = useState();\n  const [EURPrice, setEURPrice] = useState();\n\n\n  // Request account from Metamask wallet and prompt user to connect if not connect\n  // Connect to wallet provider of webpage\n  async function connect() {\n     window.ethereum.request({ method: \"eth_requestAccounts\" });\n    const provider = new ethers.providers.Web3Provider(window.etherum);\n    const signer = provider.signer();\n  }\n\n   // Get Eth price from Chainlink PriceFeed\n   async function getEth() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // Using Ethers.js to call the contract on Rinkeby Testnet\n    const contract = new ethers.Contract(EthPriceFeedAddress, EthPriceFeed.abi, provider);\n    try {\n      const data = await contract.getLatestPrice();\n      //  Convert price to readable number\n      let price = ethers.utils.formatEther(data) * 10e9;\n      //  set State to price from pricefeed\n      setEthPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n   }\n  \n    // Get BTC price from Chainlink PriceFeed\n    async function getBTC() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      // Using Ethers.js to call the contract on Rinkeby Testnet\n      const contract = new ethers.Contract(BTCPriceFeedAddress, BTCPriceFeed.abi, provider);\n      try {\n        const data = await contract.getLatestPrice();\n        //  Convert price to readable number\n        let price = ethers.utils.formatEther(data) * 10e9;\n        //  set State to price from pricefeed\n        setBTCPrice(price.toFixed(2));\n      } catch (error) {\n        console.error(\"Error\", error);\n      }\n    }\n  \n  // Get BTC price from Chainlink PriceFeed\n  async function getEUR() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    // Using Ethers.js to call the contract on Rinkeby Testnet\n    const contract = new ethers.Contract(EURPriceFeedAddress, EURPriceFeed.abi, provider);\n    try {\n      const data = await contract.getLatestPrice();\n      //  Convert price to readable number\n      let price = ethers.utils.formatEther(data) * 10e9;\n      //  set State to price from pricefeed\n      setEURPrice(price.toFixed(2));\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  }\n\n\n  // Function to tip broadcaster\n  async function tip() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let contract = new ethers.Contract(broadcasterAddress, broadcaster.abi, signer);\n    let transaction = await contract.tip();\n    \n    await transaction.wait();\n\n  }\n  \n  return (\n    <div className=\"App App-header\">\n      <header className=\"App-header\">\n        <h1>Welcome to Broadcaster</h1>\n        <button className=\"connect\" onClick={ connect }>Connect Wallet</button>\n        <div className=\"flex-container\">\n        <button onClick={ getEth() }>Eth/USD:$ { ethPrice }</button>\n        <button onClick={ getBTC() }>BTC/USD:$ { BTCPrice}</button>\n        <button onClick={ getEUR() }>EUR/USD:$ { EURPrice}</button>\n        </div>\n        <iframe\n        src=\"https://cdn.jwplayer.com/players/yPdwJR8o-qHcvMMW9.html\"\n        width=\"640\"\n        height=\"360\"\n        frameborder=\"0\"\n        scrolling=\"auto\"\n        title=\"WebDemo\"\n        allowfullscreen\n      ></iframe>\n      <button className=\"tip\" onClick={tip}>Tip</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}